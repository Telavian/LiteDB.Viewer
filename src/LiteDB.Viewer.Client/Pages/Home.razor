@page "/"
@using LiteDB.Viewer.Client.Models
@using MudBlazor
@inherits HomeViewModel

<div style="display:grid; grid-template-rows: auto 1fr 1fr; grid-template-columns: auto 1fr; padding: 5px; height: 100%;">

    <!-- Menu header -->
    <MudStack Style="grid-row: 1; grid-column: 1 / span 2;" Row="true">

        @if (!AppState.IsDBOpen)
        {
            <MudButton StartIcon="@Icons.Material.TwoTone.CreateNewFolder" Color="Color.Success" Variant="Variant.Filled"
                       OnClick="@(() => CreateDatabaseAsyncCommand())">
                Create
            </MudButton>

            <MudButton StartIcon="@Icons.Material.TwoTone.FileOpen" Color="Color.Primary" Variant="Variant.Filled"
                       OnClick="@(() => ConnectDatabaseAsyncCommand())">
                Connect
            </MudButton>
        }
        else
        {
            <MudButton StartIcon="@Icons.Material.TwoTone.Close" Color="Color.Secondary" Variant="Variant.Filled"
                       OnClick="@(() => DisconnectDatabaseAsyncCommand())">
                Disconnect
            </MudButton>

            <MudButton StartIcon="@Icons.Material.TwoTone.Save" Color="Color.Success" Variant="Variant.Filled"
                       OnClick="@(() => SaveDatabaseAsyncCommand())">
                Save
            </MudButton>

            <MudDivider Vertical="true" />

            <MudButton StartIcon="@Icons.Material.TwoTone.Refresh" Color="Color.Tertiary"
                       OnClick="@(() => RefreshCollectionsAsyncCommand())">
                Refresh
            </MudButton>

            <MudDivider Vertical="true" />

            <MudButton StartIcon="@Icons.Material.TwoTone.PlayArrow" Color="Color.Success"
                       OnClick="@(() => RunQueryAsyncCommand())">
                Run
            </MudButton>

            <MudDivider Vertical="true" />

            <MudButton StartIcon="@Icons.Material.TwoTone.FileUpload" Color="Color.Primary"
                       OnClick="@(() => LoadQueryAsyncCommand())">
                Load
            </MudButton>

            <MudButton StartIcon="@Icons.Material.TwoTone.FileDownload" Color="Color.Primary"
                       OnClick="@(() => SaveQueryAsyncCommand())">
                Save
            </MudButton>

            <MudDivider Vertical="true" />

            <MudButton StartIcon="@Icons.Material.TwoTone.PlayArrow" Color="Color.Info"
                       OnClick="@(() => BeginTransactionAsyncCommand())">
                Begin
            </MudButton>

            <MudButton StartIcon="@Icons.Material.TwoTone.Commit" Color="Color.Info"
                       OnClick="@(() => CommitTransactionAsyncCommand())">
                Commit
            </MudButton>

            <MudButton StartIcon="@Icons.Material.TwoTone.Replay" Color="Color.Info"
                       OnClick="@(() => RollbackTransactionAsyncCommand())">
                Rollback
            </MudButton>

            <MudButton StartIcon="@Icons.Material.TwoTone.Check" Color="Color.Info"
                       OnClick="@(() => CheckpointTransactionAsyncCommand())">
                Checkpoint
            </MudButton>
        }
    </MudStack>

    <!-- Navigation menu -->
    <MudPaper Style="grid-row: 2 / span 2; grid-column: 1; width: 250px; margin-top: 5px;" Elevation="5">
        <MudTreeView SelectionMode="SelectionMode.SingleSelection" AutoExpand="true" Hover="true"
                     Items="@(ConvertCollectionsToTreeItems())"
                     @bind-SelectedValue="SelectedCollection">
            <ItemTemplate Context="item">
                @{
                    var localChildren = item.Value.Children.Select(x => ConvertToTreeItem(x)).ToArray();
                }

                <MudTreeViewItem Style="width: 100%;" Expanded="true"
                                 Icon="@item.Value.Icon" Value="@item.Value"
                                 Items="@localChildren">
                    <BodyContent>
                        <MudMenu ActivationEvent="MouseEvent.RightClick">
                            <ActivatorContent>
                                <MudText Style="width: 100%;">@item.Value.Name</MudText>
                            </ActivatorContent>

                            <ChildContent>
                                @if (item.Value.IsRoot)
                                {
                                    <MudMenuItem Icon="@Icons.Material.TwoTone.Dataset"
                                                 OnClick="@(() => DatabaseInfoAsyncCommand(item.Value))">
                                        Database info
                                    </MudMenuItem>

                                    <MudDivider />

                                    <MudMenuItem Icon="@Icons.Material.TwoTone.FileUpload"
                                                 OnClick="@(() => ImportDatabaseAsyncCommand(item.Value))">
                                        Import
                                    </MudMenuItem>

                                    <MudMenuItem Icon="@Icons.Material.TwoTone.Build"
                                                 OnClick="@(() => RebuildDatabaseAsyncCommand(item.Value))">
                                        Rebuild
                                    </MudMenuItem>
                                }
                                else
                                {
                                    <MudMenuItem Icon="@Icons.Material.TwoTone.Task"
                                                 OnClick="@(() => NewQueryAsyncCommand(item.Value))">
                                        Query
                                    </MudMenuItem>

                                    <MudMenuItem Icon="@Icons.Material.TwoTone.FormatListNumbered"
                                                 OnClick="@(() => CountCollectionAsyncCommand(item.Value))">
                                        Count
                                    </MudMenuItem>

                                    <MudMenuItem Icon="@Icons.Material.TwoTone.QuestionMark"
                                                 OnClick="@(() => ExplainCollectionAsyncCommand(item.Value))">
                                        Explain plan
                                    </MudMenuItem>

                                    <MudDivider />

                                    <MudMenuItem Icon="@Icons.Material.TwoTone.ListAlt"
                                                 OnClick="@(() => IndexesCollectionAsyncCommand(item.Value))">
                                        Indexes
                                    </MudMenuItem>

                                    <MudDivider />

                                    <MudMenuItem Icon="@Icons.Material.TwoTone.FileDownload"
                                                 OnClick="@(() => ExportCollectionAsyncCommand(item.Value))">
                                        Export
                                    </MudMenuItem>

                                    <MudMenuItem Icon="@Icons.Material.TwoTone.Search"
                                                 OnClick="@(() => AnalyzeCollectionAsyncCommand(item.Value))">
                                        Analyze
                                    </MudMenuItem>

                                    <MudMenuItem Icon="@Icons.Material.TwoTone.Edit"
                                                 OnClick="@(() => RenameCollectionAsyncCommand(item.Value))">
                                        Rename
                                    </MudMenuItem>

                                    <MudMenuItem Icon="@Icons.Material.TwoTone.Delete"
                                                 OnClick="@(() => DropCollectionAsyncCommand(item.Value))">
                                        Drop collection
                                    </MudMenuItem>
                                }
                            </ChildContent>
                        </MudMenu>
                    </BodyContent>
                </MudTreeViewItem>
            </ItemTemplate>
        </MudTreeView>
    </MudPaper>

    <!-- Queries -->
    <MudDynamicTabs Style="grid-row: 2; grid-column: 2; margin-top: 5px; margin-left: 5px;"
                    AddTab="@(() => AddQueryAsyncCommand())" CloseTab="@(p => CloseQueryAsyncCommand(p))"
                    PanelClass="maximum-panel-height" Color="@Color.Info" Rounded="true"
                    AddIconToolTip="Click to add a new tab" CloseIconToolTip="Close tab. All data will be lost"
                    @bind-ActivePanelIndex="@ActiveQueryIndex">
        @foreach (var query in AllQueries)
        {
            <MudTabPanel ID="@query.QueryId" Text="@query.Header" Tag="@query">
                <InputTextArea Style="height: 100%; width: 100%; padding: 5px;"
                               @bind-Value="query.Query" @onkeydown="@(key => ProcessQueryKeyDownAsyncCommand(key))" />
            </MudTabPanel>
        }
    </MudDynamicTabs>

    <!-- Query results -->
    <MudTabs Style="grid-row: 3; grid-column: 2; margin-top: 5px; margin-left: 5px;"
             PanelClass="maximum-panel-height" Color="@Color.Primary" Rounded="true">
        <MudTabPanel Text="Text">
            <InputTextArea Style="height: 100%; width: 100%; padding: 5px;"
                           @bind-Value="SelectedQuery.JsonResult" />
        </MudTabPanel>

        <MudTabPanel Text="Grid">
            <MudTable Hover="true" Class="maximum-panel-height"
                      LoadingProgressColor="Color.Info" Bordered="true" Dense="true"
                      Elevation="3" Height="100%" Virtualize="true" 
                      Items="@SelectedQuery.GridRecords.Records">
                <HeaderContent>
                    @foreach (var column in SelectedQuery.GridRecords.AllColumns)
                    {
                        <MudTh>
                            <MudTableSortLabel SortBy="new Func<DBQueryGridRecord, object>(x => x?.GetRowData(column) ?? string.Empty)">
                                @column
                            </MudTableSortLabel>
                        </MudTh>
                    }
                </HeaderContent>

                <RowTemplate>
                    @foreach (var column in SelectedQuery.GridRecords.AllColumns)
                    {
                        <MudTd DataLabel="@column">@context.GetRowData(column)</MudTd>
                    }
                </RowTemplate>
            </MudTable>
        </MudTabPanel>
    </MudTabs>
</div>
